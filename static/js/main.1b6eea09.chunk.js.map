{"version":3,"sources":["components/Contents.js","components/Nav.js","App.js","index.js"],"names":["Contents","countryOption","useState","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","whichCountry","useEffect","fetchEvent","a","axios","res","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","deaths","Deaths","recovered","Recovered","findItem","find","push","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","className","options","title","display","text","fontsize","legend","position","responsive","Nav","props","onChange","event","value","target","getOptionValue","App","option","setOption","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b6eea09.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\n\nconst Contents = ({ countryOption }) => {\n  const [confirmedData, setConfirmedData] = useState({});\n  const [quarantinedData, setQuarantinedData] = useState({});\n  const [comparedData, setComparedData] = useState({});\n\n  const whichCountry =\n    countryOption === \"KR\" ? \"국내\" : countryOption === \"US\" ? \"미국\" : \"음...\";\n\n  useEffect(() => {\n    const fetchEvent = async () => {\n      const res = await axios(\n        `https://api.covid19api.com/total/dayone/country/${countryOption}`\n      );\n\n      makeData(res.data);\n    };\n\n    const makeData = (items) => {\n      const arr = items.reduce((acc, cur) => {\n        const currentDate = new Date(cur.Date);\n        const year = currentDate.getFullYear();\n        const month = currentDate.getMonth() + 1;\n        const date = currentDate.getDate();\n        const confirmed = cur.Confirmed;\n        const active = cur.Active;\n        const deaths = cur.Deaths;\n        const recovered = cur.Recovered;\n\n        const findItem = acc.find((a) => a.year === year && a.month === month);\n\n        if (!findItem) {\n          acc.push({\n            year,\n            month,\n            date,\n            confirmed,\n            active,\n            deaths,\n            recovered,\n          });\n        }\n\n        if (findItem && findItem.date < date) {\n          findItem.active = active;\n          findItem.confirmed = confirmed;\n          findItem.recovered = recovered;\n          findItem.deaths = active;\n          findItem.year = year;\n          findItem.month = month;\n          findItem.date = date;\n        }\n\n        return acc;\n      }, []);\n\n      const labels = arr.map((a) => `${a.month}월`);\n      setConfirmedData({\n        labels,\n        datasets: [\n          {\n            label: `${whichCountry} 확진자`,\n            backgroundColor: \"salmon\",\n            fill: true,\n            data: arr.map((a) => a.confirmed),\n          },\n        ],\n      });\n\n      setQuarantinedData({\n        labels,\n        datasets: [\n          {\n            label: \"월별 격리자 현황\",\n            backgroundColor: \"salmon\",\n            fill: false,\n            borderColor: \"salmon\",\n            data: arr.map((a) => a.active),\n          },\n        ],\n      });\n\n      const last = arr[arr.length - 1];\n      setComparedData({\n        labels: [\"확진자\", \"격리해제\", \"사망\"],\n        datasets: [\n          {\n            label: \"월별 격리자 현황\",\n            backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            fill: false,\n            borderColor: \"salmon\",\n            data: [last.confirmed, last.recovered, last.deaths],\n          },\n        ],\n      });\n    };\n\n    fetchEvent();\n  }, [countryOption]);\n\n  return (\n    <div className=\"contents\">\n      <h1>{`${whichCountry} 코로나 현황`}</h1>\n      <Bar\n        className=\"contents__bar\"\n        data={confirmedData}\n        options={{\n          title: {\n            display: true,\n            text: \"누적 확진자 추이\",\n            fontsize: 16,\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n          },\n        }}\n      />\n      <Line\n        className=\"contents__line\"\n        data={quarantinedData}\n        options={{\n          title: {\n            display: true,\n            text: \"누적 확진자 추이\",\n            fontsize: 16,\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n          },\n        }}\n      />\n      <div className=\"contents__doughnut__container\">\n        <Doughnut\n          className=\"contents__doughnut\"\n          data={comparedData}\n          options={{\n            title: {\n              display: true,\n              text: \"확진자, 격리해제, 사망\",\n              fontsize: 16,\n            },\n            legend: {\n              display: true,\n              position: \"bottom\",\n            },\n            responsive: true,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Contents;\n","/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\n\nconst Nav = (props) => {\n  const getOptionValue = (event) => {\n    const value = event.target.value;\n    props.getOptionValue(value);\n  };\n\n  return (\n    <div className=\"navigation\">\n      <h1 className=\"navigation__title\">COVID-19</h1>\n      <select className=\"navigation__select\" onChange={getOptionValue}>\n        <option value=\"KR\">한국</option>\n        <option value=\"US\">미국</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Nav;\n","/* eslint-disable*/\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Contents from \"./components/Contents\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const [option, setOption] = useState(\"KR\");\n\n  const getOptionValue = (option) => {\n    setOption(option);\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav value={option} getOptionValue={getOptionValue} />\n      <Contents countryOption={option} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}